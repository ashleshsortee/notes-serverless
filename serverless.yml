# NOTE: update this with your service name
service: notes-app-api

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs12.x
  stage: prod
  region: ap-south-1

environment:
  tableName: notes
  stripeSecretKey: ${env:STRIPE_SECRET_KEY}

iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:DescribeTable
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
    Resource: "arn:aws:dynamodb:ap-south-1:*:*"

resources:
  - ${file(resources/api-gateway-errors.yml)}

functions:
  create:
    handler: serverless-apis/create.main
    events:
      - http:
          path: notes
          method: post
          cors: true
          authorizer: aws_iam
  get:
    handler: serverless-apis/get.main
    events:
      - http:
          path: notes/{id}
          method: get
          cors: true
          authorizer: aws_iam

  list:
    handler: serverless-apis/list.main
    events:
      - http:
          path: notes
          method: get
          cors: true
          authorizer: aws_iam
  
  update:
    handler: serverless-apis/update.main
    events:
      - http:
          path: notes/{id}
          method: put
          cors: true
          authorizer: aws_iam
        
  delete:
    handler: serverless-apis/delete.main
    events:
      - http:
          path: notes/{id}
          method: delete
          cors: true
          authorizer: aws_iam
        
  billing:
    handler: serverless-apis/billing.main
    events:
      - http:
          path: billing
          method: post
          cors: true
          authorizer: aws_iam